import {
  script2 as script
} from "./chunk-D54L7E5G.js";
import {
  BaseStyle
} from "./chunk-JV4DT24W.js";
import "./chunk-XEORVFER.js";
import {
  createElementBlock,
  createVNode,
  mergeProps,
  openBlock,
  renderSlot,
  resolveComponent
} from "./chunk-TF6X5W6F.js";

// node_modules/primevue/overlaybadge/style/index.mjs
var theme = function theme2(_ref) {
  var dt = _ref.dt;
  return "\n.p-overlaybadge {\n    position: relative;\n}\n\n.p-overlaybadge .p-badge {\n    position: absolute;\n    inset-block-start: 0;\n    inset-inline-end: 0;\n    transform: translate(50%, -50%);\n    transform-origin: 100% 0;\n    margin: 0;\n    outline-width: ".concat(dt("overlaybadge.outline.width"), ";\n    outline-style: solid;\n    outline-color: ").concat(dt("overlaybadge.outline.color"), ";\n}\n\n.p-overlaybadge .p-badge:dir(rtl) {\n    transform: translate(-50%, -50%);\n}\n");
};
var classes = {
  root: "p-overlaybadge"
};
var OverlayBadgeStyle = BaseStyle.extend({
  name: "overlaybadge",
  theme,
  classes
});

// node_modules/primevue/overlaybadge/index.mjs
var script$1 = {
  name: "OverlayBadge",
  "extends": script,
  style: OverlayBadgeStyle,
  provide: function provide() {
    return {
      $pcOverlayBadge: this,
      $parentInstance: this
    };
  }
};
var script2 = {
  name: "OverlayBadge",
  "extends": script$1,
  inheritAttrs: false,
  components: {
    Badge: script
  }
};
function render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_Badge = resolveComponent("Badge");
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("root")
  }, _ctx.ptmi("root")), [renderSlot(_ctx.$slots, "default"), createVNode(_component_Badge, mergeProps(_ctx.$props, {
    pt: _ctx.ptm("pcBadge")
  }), null, 16, ["pt"])], 16);
}
script2.render = render;
export {
  script2 as default
};
//# sourceMappingURL=primevue_overlaybadge.js.map
